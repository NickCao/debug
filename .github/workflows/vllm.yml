name: vllm
on:
  push:
jobs:
  vllm:
    runs-on: ubuntu-24.04-arm
    container:
      image: docker.io/rockylinux/rockylinux:9.4
    env:
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Configure sccache
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_SERVICE_V2', `on`);
            core.exportVariable('ACTIONS_RESULTS_URL', process.env.ACTIONS_RESULTS_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          curl -L https://github.com/mozilla/sccache/releases/download/v0.10.0/sccache-v0.10.0-aarch64-unknown-linux-musl.tar.gz | tar xzf -
          export PATH=$PWD/sccache-v0.10.0-aarch64-unknown-linux-musl:$PATH
          source $HOME/.local/bin/env

          dnf install -y 'dnf-command(config-manager)'
          dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel9/sbsa/cuda-rhel9.repo
          dnf install -y git-core python3 python3-devel numactl-devel cuda-toolkit-12-6

          git clone https://github.com/vllm-project/vllm.git
          cd vllm

          uv venv
          python3 use_existing_torch.py
          uv pip install --torch-backend cu126 torch torchvision torchaudio
          uv pip install -r requirements/build.txt

          export MAX_JOBS=1
          export NVCC_THREADS=1
          export DG_JIT_USE_NVRTC=1
          export TORCH_CUDA_ARCH_LIST="8.7"
          export CCACHE_NOHASHDIR="true"
          uv pip install --no-build-isolation --verbose -e .
